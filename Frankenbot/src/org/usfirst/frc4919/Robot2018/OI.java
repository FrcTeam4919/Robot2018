// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4919.Robot2018;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4919.Robot2018.commands.*;
import org.usfirst.frc4919.Robot2018.subsystems.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton liftArmButton;
    public JoystickButton lowerArmButton;
    public JoystickButton clampButton;
    public JoystickButton releaseClampButton;
    public JoystickButton winchLift;
    public JoystickButton winchLower;
    public Joystick joystick1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick1 = new Joystick(0);
        
        winchLift = new JoystickButton(joystick1, 1);
        winchLift.whileHeld(new WinchLift());
        winchLift.whenReleased(new WinchStop());
        winchLower = new JoystickButton(joystick1, 2);
        winchLower.whileHeld(new WinchLower());
        winchLower.whenReleased(new WinchStop());
        releaseClampButton = new JoystickButton(joystick1, 4);
        releaseClampButton.whileHeld(new ReleaseClamp());
        clampButton = new JoystickButton(joystick1, 3);
        clampButton.whileHeld(new Clamp());
        lowerArmButton = new JoystickButton(joystick1, 6);
        lowerArmButton.whileHeld(new LowerArm());
        lowerArmButton.whenReleased(new LowerArm().finish());
        liftArmButton = new JoystickButton(joystick1, 5);
        liftArmButton.whileHeld(new LiftArm());
        liftArmButton.whenReleased(new LiftArm().finish());

        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new MoveToSwitch());
        SmartDashboard.putData("Lift Arm", new LiftArm());
        SmartDashboard.putData("Lower Arm", new LowerArm());
        SmartDashboard.putData("Clamp", new Clamp());
        SmartDashboard.putData("Release Clamp", new ReleaseClamp());
        SmartDashboard.putData("Winch Lift", new WinchLift());
        SmartDashboard.putData("Winch Lower", new WinchLower());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick1() {
        return joystick1;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

